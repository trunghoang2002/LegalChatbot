services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      # - "3000:3000"
      - "80:80"
    depends_on:
      - backend
    networks:
      - app-network
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - qdrant
    networks:
      - app-network
    env_file:
      - ./backend/.env
    environment:
      - DB_HOST=postgres
      - QDRANT_URL=http://qdrant:6333
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:5000/api/docs"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    # restart: unless-stopped

  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=chatbot_user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=chatbot_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
  
  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT__HTTP_PORT=6333
      - QDRANT__HOST=0.0.0.0
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  qdrant_data: